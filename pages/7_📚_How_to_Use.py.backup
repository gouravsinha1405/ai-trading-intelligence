import streamlit as st

st.set_page_config(page_title="How to Use", page_icon="📚", layout="wide")

# Custom CSS for better formatting
st.markdown("""
<style>
.big-font {
    font-size:20px !important;
    font-weight: bold;
}
.medium-font {
    font-size:16px !important;
    font-weight: bold;
}
.highlight {
    background-color: #f0f2f6;
    padding: 10px;
    border-radius: 5px;
    border-left: 5px solid #ff6b6b;
}
.success-box {
    background-color: #d4edda;
    padding: 15px;
    border-radius: 5px;
    border-left: 5px solid #28a745;
}
.warning-box {
    background-color: #fff3cd;
    padding: 15px;
    border-radius: 5px;
    border-left: 5px solid #ffc107;
}
.info-box {
    background-color: #d1ecf1;
    padding: 15px;
    border-radius: 5px;
    border-left: 5px solid #17a2b8;
}
</style>
""", unsafe_allow_html=True)

st.title("📚 Complete Trading Platform Tutorial")
st.caption("Master every feature of this comprehensive algorithmic trading framework")

# Sidebar Navigation
section = st.sidebar.radio("📋 Table of Contents", [
    "Quick Start",
    "Setup & Prerequisites", 
    "Platform Overview",
    "Trading Basics",
    "Key Concepts",
    "Dashboard",
    "Strategy Builder",
    "Live Trading",
    "News Analysis",
    "Backtesting",
    "AI Assistant",
    "Best Practices",
    "Risk Management",
    "Common Pitfalls",
    "Troubleshooting",
    "Privacy & Safety"
])

# Page Links to Other Modules
st.sidebar.markdown("---")
st.sidebar.markdown("**� Navigate to Modules:**")
st.page_link("pages/1_📊_Dashboard.py", label="📊 Dashboard")
st.page_link("pages/2_🔧_Strategy_Builder.py", label="🔧 Strategy Builder") 
st.page_link("pages/3_📈_Live_Trading.py", label="📈 Live Trading")
st.page_link("pages/4_📰_News_Analysis.py", label="📰 News Analysis")
st.page_link("pages/5_🔄_Backtesting.py", label="🔄 Backtesting")
st.page_link("pages/6_🤖_AI_Assistant.py", label="🤖 AI Assistant")

# Initialize session state for persistent expanders
if 'expanded_sections' not in st.session_state:
    st.session_state.expanded_sections = {}

# Render sections based on sidebar selection
if section == "Quick Start":
    st.markdown("---")
    st.markdown('<p class="big-font">🚀 Quick Start (3 Simple Steps)</p>', unsafe_allow_html=True)
    
    st.markdown("""
    <div class="success-box">
    <h3>⚡ Get Trading in Under 5 Minutes!</h3>
    
    <strong>Step 1: Check Market Conditions</strong>
    <ol>
    <li>Navigate to <strong>📊 Dashboard</strong> (sidebar link above)</li>
    <li>Review current market trends and sentiment</li>
    <li>Note if markets are trending up, down, or sideways</li>
    </ol>
    
    <strong>Step 2: Create Your First Strategy</strong>
    <ol>
    <li>Go to <strong>🔧 Strategy Builder</strong> (sidebar link above)</li>
    <li>Choose "Momentum" strategy type</li>
    <li>Leave all parameters at defaults</li>
    <li>Click "Run Strategy" to see baseline performance</li>
    </ol>
    
    <strong>Step 3: Let AI Optimize</strong>
    <ol>
    <li>Click the <strong>"🤖 AI Optimize (Universal)"</strong> button</li>
    <li>Set "Min Improvement Required" to 5%</li>
    <li>Set "Max Drawdown Tolerance" to 3pp</li>
    <li>Click "Start Optimization" and watch the AI improve your strategy!</li>
    </ol>
    
    <strong>🎯 That's it!</strong> You now have an AI-optimized trading strategy. Use the sidebar to explore other sections and learn more advanced techniques.
    </div>
    """, unsafe_allow_html=True)

elif section == "Setup & Prerequisites":
    st.markdown("---")
    st.markdown('<p class="big-font">⚙️ Setup & Prerequisites</p>', unsafe_allow_html=True)
    
    st.markdown("""
    <div class="info-box">
    <h3>🔧 Getting Everything Ready</h3>
    
    <strong>Required Setup:</strong>
    <ol>
    <li><strong>Environment File (.env)</strong>
        <ul>
        <li>Create a <code>.env</code> file in your project root</li>
        <li>Add: <code>GROQ_API_KEY=your_groq_api_key_here</code></li>
        <li>Optional: <code>ALPHA_VANTAGE_API_KEY=your_key</code></li>
        <li>Optional: <code>NEWS_API_KEY=your_key</code></li>
        </ul>
    </li>
    <li><strong>Python Environment</strong>
        <ul>
        <li><code>python -m venv venv</code></li>
        <li><code>source venv/bin/activate</code> (Linux/Mac) or <code>venv\\Scripts\\activate</code> (Windows)</li>
        <li><code>pip install -r requirements.txt</code></li>
        </ul>
    </li>
    <li><strong>Launch Application</strong>
        <ul>
        <li><code>streamlit run main.py</code></li>
        <li>Open your browser to the provided URL</li>
        </ul>
    </li>
    </ol>
    
    <strong>� API Keys (Free Options):</strong>
    <ul>
    <li><strong>Groq API</strong>: Required for AI features - Get free key at console.groq.com</li>
    <li><strong>Alpha Vantage</strong>: Optional for additional data - Free tier available</li>
    <li><strong>News API</strong>: Optional for news analysis - Free tier available</li>
    </ul>
    
    <strong>⚠️ Security Note:</strong>
    <ul>
    <li>Never commit your .env file to version control</li>
    <li>Add .env to your .gitignore file</li>
    <li>Keep API keys secure and rotate them periodically</li>
    </ul>
    </div>
    """, unsafe_allow_html=True)

elif section == "Platform Overview":
    st.markdown("---")
    st.markdown('<p class="big-font">🔍 Platform Overview</p>', unsafe_allow_html=True)
    
    st.markdown("""
    <div class="highlight">
    <h4>🏗️ Architecture</h4>
    This platform consists of 6 main modules, each serving a specific purpose in your trading workflow:

    <ol>
    <li><strong>📊 Dashboard</strong> - Real-time market overview and analysis</li>
    <li><strong>🔧 Strategy Builder</strong> - Create and optimize trading strategies with AI</li>
    <li><strong>📈 Live Trading</strong> - Practice trading with virtual money</li>
    <li><strong>📰 News Analysis</strong> - Market sentiment from news feeds</li>
    <li><strong>🔄 Backtesting</strong> - Test strategies on historical data</li>
    <li><strong>🤖 AI Assistant</strong> - Get intelligent trading insights and guidance</li>
    </ol>
    
    <strong>🎯 Data Sources & Realism:</strong>
    <ul>
    <li><strong>Live Market Data</strong>: Real Indian market data via jugaad-data</li>
    <li><strong>Demo Data</strong>: High-quality synthetic data for strategy testing</li>
    <li><strong>Business Day Calendar</strong>: Proper handling of trading days and holidays</li>
    <li><strong>News Feeds</strong>: Real RSS feeds with sample data fallback when sources unavailable</li>
    <li><strong>Execution Model</strong>: Close-to-close returns with next-bar execution (no look-ahead bias)</li>
    </ul>
    </div>
    """, unsafe_allow_html=True)

elif section == "Trading Basics":
    st.markdown("---")
    st.markdown('<p class="big-font">📖 Trading Basics for Beginners</p>', unsafe_allow_html=True)

    basics_col1, basics_col2 = st.columns(2)

    with basics_col1:
        st.markdown("""
        <div class="success-box">
        <h4>🎯 What is Algorithmic Trading?</h4>
        Algorithmic trading uses computer programs to make trading decisions based on:
        <ul>
        <li><strong>Technical Indicators</strong> - Price patterns and mathematical formulas</li>
        <li><strong>Market Data</strong> - Volume, price movements, trends</li>
        <li><strong>Risk Rules</strong> - Stop losses, position sizing, profit targets</li>
        <li><strong>Automated Execution</strong> - Removes emotional decision making</li>
        </ul>
        </div>
        """, unsafe_allow_html=True)

    with basics_col2:
        st.markdown("""
        <div class="warning-box">
        <h4>⚠️ Important Disclaimers</h4>
        <ul>
        <li><strong>Educational Purpose Only</strong> - This is for learning, not investment advice</li>
        <li><strong>Virtual Money</strong> - Practice with fake money first</li>
        <li><strong>Risk Management</strong> - Never risk more than you can afford to lose</li>
        <li><strong>Backtesting ≠ Future Performance</strong> - Past results don't guarantee future success</li>
        </ul>
        </div>
        """, unsafe_allow_html=True)

elif section == "Key Concepts":
    st.markdown("---")
    st.markdown('<p class="big-font">🧠 Key Trading Concepts</p>', unsafe_allow_html=True)

    concepts_col1, concepts_col2, concepts_col3 = st.columns(3)

    with concepts_col1:
        st.markdown("""
        **📈 Strategy Types**
        - **Momentum**: Buy rising assets, sell falling ones
        - **Mean Reversion**: Buy oversold, sell overbought  
        - **Breakout**: Trade when price breaks key levels
        - **Custom**: Your own trading rules
        
        **📊 Technical Indicators**
        - **RSI**: Measures overbought/oversold (0-100)
        - **Bollinger Bands**: Price channels around moving average
        - **Volume**: Number of shares traded
        - **Moving Averages**: Smoothed price trends
        """)

    with concepts_col2:
        st.markdown("""
        **⚠️ Risk Management**
        - **Stop Loss**: Exit losing trades at X% loss
        - **Take Profit**: Lock in gains at X% profit
        - **Position Size**: How much capital per trade
        - **Max Drawdown**: Largest peak-to-valley loss
        
        **📏 Performance Metrics**
        - **Total Return**: Overall profit/loss %
        - **Sharpe Ratio**: Risk-adjusted returns
        - **Sortino Ratio**: Downside risk-adjusted returns
        - **Win Rate**: % of profitable trades
        """)

    with concepts_col3:
        st.markdown("""
        **🔄 Trading Process**
        1. **Analyze** market conditions
        2. **Generate** buy/sell signals  
        3. **Execute** trades with rules
        4. **Monitor** performance
        5. **Adjust** strategy as needed
        
        **💰 Cost Considerations**
        - **Transaction Costs**: Broker fees per trade
        - **Slippage**: Price difference at execution
        - **Turnover**: How often you trade
        - **Tax Implications**: Short vs long-term gains
        """)

elif section == "Strategy Builder":
    st.markdown("---")
    st.markdown('<p class="big-font">🔧 Strategy Builder - AI-Powered Optimization</p>', unsafe_allow_html=True)
    
    # Enhanced Strategy Builder section with all the details about transaction costs, round trips, etc.
    st.markdown("""
    <div class="success-box">
    <h4>🚀 This is the Core of the Platform!</h4>
    The Strategy Builder is where you create, test, and optimize trading strategies using AI assistance.
    </div>
    
    **⚙️ Configuration Panel (Left Sidebar):**
    
    **1. Basic Setup**
    - **Strategy Name**: Give your strategy a memorable name
    - **Strategy Type**: Choose from Momentum, Mean Reversion, Breakout, or Custom
    - **Timeframe**: Select 1day, 4hour, 1hour, or 15min (display only)
    - **Default Lookback**: Controls the base period for calculations (5-100 days)
    - **Random Seed**: For reproducible demo data (change to test different market conditions)
    
    **2. Risk Management (Critical!)**
    - **Max Position Size**: 1-100% of capital per trade (start with 20-50%)
    - **Stop Loss**: 1-20% maximum loss per trade (recommend 2-5%)
    - **Take Profit**: 2-40% profit target (recommend 6-12%)
    - **Transaction Costs**: 0-50 basis points (1bp = 0.01%, realistic is 5-20bp)
    
    **🤖 AI Optimization Process:**
    
    **Optimization Objective**: Defaults to **Sortino Ratio** (focuses on downside risk)
    - Sortino is preferred over Sharpe as it only penalizes downside volatility
    - You can change this in future versions when selector is exposed
    
    **Step 1: Click "AI Optimize (Universal)"**
    - ✅ Works with Momentum, Mean Reversion, and Breakout strategies
    - ⚠️ **Custom strategies**: AI Optimize is disabled until a signal function is provided
    
    **💡 Export/Import Strategy Manifests:**
    - **Export**: Download your strategy configuration as JSON using "Export Manifest" button
    - **Import**: Upload a saved manifest in Strategy Builder to restore exact parameter settings
    - **Sharing**: Share successful strategies with others via manifest files
    """, unsafe_allow_html=True)
    
    # Add mini calculators section
    with st.expander("🧮 Position Sizing Calculators", expanded=st.session_state.expanded_sections.get('pos_calc', False)):
        st.session_state.expanded_sections['pos_calc'] = True
        
        st.markdown("**ATR-Based Position Sizing**")
        col1, col2 = st.columns(2)
        with col1:
            equity = st.number_input("Portfolio Equity ($)", 1000.0, 1e9, 100000.0, step=1000.0)
            risk_per_trade = st.slider("Risk per trade (%)", 0.1, 5.0, 1.0, 0.1)
        with col2:
            entry_price = st.number_input("Entry Price ($)", 0.01, 1000.0, 50.0, step=0.1)
            stop_loss_pct = st.slider("Stop Loss (%)", 1.0, 10.0, 3.0, 0.1)
        
        risk_amount = equity * (risk_per_trade / 100)
        risk_per_share = entry_price * (stop_loss_pct / 100)
        shares = int(risk_amount / risk_per_share) if risk_per_share > 0 else 0
        
        st.metric("Position Size", f"{shares:,} shares")
        st.metric("Risk Amount", f"${risk_amount:,.2f}")
        st.caption(f"Formula: (${equity:,.0f} × {risk_per_trade}%) ÷ (${entry_price} × {stop_loss_pct}%) = {shares:,} shares")

# Add a placeholder for other sections to maintain structure
else:
    st.markdown("---")
    st.markdown(f'<p class="big-font">🔧 {section} - Under Development</p>', unsafe_allow_html=True)
    st.info(f"The {section} section is being enhanced. Please check back soon or select another section from the sidebar.")

# Keep the rest of the file structure for now - we'll replace it gradually

# Detailed Feature Walkthroughs
st.markdown("---")
st.markdown('<p class="big-font">🔍 Detailed Feature Walkthroughs</p>', unsafe_allow_html=True)

# Dashboard
st.markdown('<p class="medium-font" id="1-dashboard-market-overview">📊 1. Dashboard - Market Overview</p>', unsafe_allow_html=True)

with st.expander("📊 Dashboard Complete Tutorial", expanded=False):
    st.markdown("""
    <div class="info-box">
    <h4>🎯 Purpose</h4>
    The Dashboard provides a comprehensive view of market conditions and helps you understand the current trading environment.
    </div>
    
    **🔍 What You'll Find:**
    
    **📈 Market Data Display**
    - Real-time price charts from Indian markets (via jugaad-data)
    - Multiple timeframes (1D, 1W, 1M, 3M, 1Y)
    - Volume analysis and trend indicators
    - Market breadth metrics
    
    **📊 Key Features:**
    1. **Interactive Charts** - Zoom, pan, and analyze price movements
    2. **Technical Overlays** - Moving averages, Bollinger Bands, RSI
    3. **Market Sentiment** - Overall market direction and strength
    4. **Sector Analysis** - Performance across different industries
    
    **🎯 How to Use:**
    1. **Start Here First** - Always check market conditions before trading
    2. **Identify Trends** - Look for clear uptrends, downtrends, or sideways markets
    3. **Check Volume** - High volume confirms price movements
    4. **Note Market Regime** - Bull market, bear market, or consolidation
    
    **💡 Pro Tips:**
    - Use Dashboard insights to choose appropriate strategy types
    - In trending markets → Momentum strategies work better
    - In choppy markets → Mean reversion strategies may be better
    - Always consider broader market context before individual trades
    """)

# Strategy Builder
st.markdown('<p class="medium-font" id="2-strategy-builder-ai-powered-optimization">🔧 2. Strategy Builder - AI-Powered Optimization</p>', unsafe_allow_html=True)

with st.expander("🔧 Strategy Builder Complete Tutorial", expanded=False):
    st.markdown("""
    <div class="success-box">
    <h4>🚀 This is the Core of the Platform!</h4>
    The Strategy Builder is where you create, test, and optimize trading strategies using AI assistance.
    </div>
    
    **⚙️ Configuration Panel (Left Sidebar):**
    
    **1. Basic Setup**
    - **Strategy Name**: Give your strategy a memorable name
    - **Strategy Type**: Choose from Momentum, Mean Reversion, Breakout, or Custom
    - **Timeframe**: Select 1day, 4hour, 1hour, or 15min (display only)
    - **Default Lookback**: Controls the base period for calculations (5-100 days)
    - **Random Seed**: For reproducible demo data (change to test different market conditions)
    
    **2. Risk Management (Critical!)**
    - **Max Position Size**: 1-100% of capital per trade (start with 20-50%)
    - **Stop Loss**: 1-20% maximum loss per trade (recommend 2-5%)
    - **Take Profit**: 2-40% profit target (recommend 6-12%)
    - **Transaction Costs**: 0-50 basis points (1bp = 0.01%, realistic is 5-20bp)
    
    **3. Strategy-Specific Parameters:**
    
    **📈 Momentum Strategy:**
    - **Period**: How many days to look back for momentum (5-60)
    - **Threshold**: Minimum % change to trigger signal (0.1-5%)
    - **Volume Filter**: Requires X times average volume (1.0-3.0x)
    - *Best for*: Trending markets, breakouts, strong directional moves
    
    **📉 Mean Reversion Strategy:**
    - **RSI Period**: Days for RSI calculation (5-30, default 14)
    - **RSI Oversold**: Buy threshold (5-40, default 30)
    - **RSI Overbought**: Sell threshold (60-95, default 70)
    - **BB Period**: Bollinger Band period (10-40, default 20)
    - **BB Std Dev**: Band width (1.0-3.5, default 2.0)
    - *Best for*: Choppy markets, range-bound trading, reversals
    
    **🚀 Breakout Strategy:**
    - **Lookback Period**: Days for high/low calculation (10-100)
    - **Volume Filter**: Confirmation filter (1.0-3.0x average)
    - *Best for*: Consolidation breakouts, strong trend starts
    
    **📊 Main Display Area:**
    
    **Left Panel - Charts & Results:**
    - **Portfolio Equity Curve**: Your strategy's performance over time
    - **Price Chart**: Underlying asset price with buy/sell markers
    - **Signal Distribution**: Pie chart of BUY/SELL/HOLD signals
    - **Data Table**: Detailed trade-by-trade results
    
    **Right Panel - Metrics & Actions:**
    - **Performance Metrics**: All key statistics explained below
    - **Export Manifest**: Download strategy configuration as JSON
    - **🤖 AI Optimize Button**: The magic happens here!
    
    **🎯 Performance Metrics Explained:**
    
    - **Total Return**: Overall profit/loss percentage
    - **CAGR**: Compound Annual Growth Rate (annualized return)
    - **Max Drawdown**: Worst peak-to-valley loss (lower is better)
    - **Sharpe Ratio**: Risk-adjusted returns (>1.0 is good, >2.0 is excellent)
    - **Sortino Ratio**: Like Sharpe but only counts downside risk
    - **Profit Factor**: Gross profit ÷ gross loss (>1.5 is good)
    - **Win Rate**: Percentage of profitable trades
    - **Turnover**: How often you trade per year
    - **Round Trips/Year**: Complete buy→sell cycles annually
    - **Total Trades**: Number of individual trades executed
    
    **🤖 AI Optimization Process:**
    
    **Step 1: Click "AI Optimize (Universal)"**
    - Works with Momentum, Mean Reversion, and Breakout strategies
    - Custom strategies show a helpful warning message
    
    **Step 2: Set Optimization Controls**
    - **Min Improvement Required**: 2-15% (lower = more experimental)
    - **Max Drawdown Tolerance**: 2-8pp (higher = allows riskier changes)
    
    **Step 3: Watch the AI Work**
    - AI analyzes current performance and suggests ≤3 parameter changes per round
    - Tests each suggestion with full backtesting
    - Accepts improvements that meet your criteria
    - Provides detailed reasoning for each suggestion
    
    **Step 4: Review Results**
    - **Optimization Results**: Before/after performance comparison
    - **Optimized Parameters**: Specific values to adjust in sidebar
    - **Optimization Journey**: Complete log of what AI tried and why
    
    **💡 Strategy Builder Pro Tips:**
    
    1. **Start Simple**: Begin with default parameters and understand the strategy first
    2. **Use AI Wisely**: Let AI optimize, but understand why it makes changes
    3. **Test Different Seeds**: Change random seed to test various market conditions
    4. **Risk First**: Always set appropriate stop losses and position sizes
    5. **Validate Results**: Use backtesting module for out-of-sample testing
    6. **Real Costs**: Include realistic transaction costs (10-20bp for most brokers)
    """)

# Live Trading
st.markdown('<p class="medium-font" id="3-live-trading-virtual-money-practice">📈 3. Live Trading - Virtual Money Practice</p>', unsafe_allow_html=True)

with st.expander("📈 Live Trading Complete Tutorial", expanded=False):
    st.markdown("""
    <div class="warning-box">
    <h4>🎯 Safe Learning Environment</h4>
    Live Trading uses virtual money to let you practice without financial risk. This is where theory meets practice!
    </div>
    
    **🔄 How Live Trading Works:**
    
    **1. Portfolio Management**
    - Start with virtual $100,000 (or your chosen amount)
    - Track your cash, positions, and total portfolio value
    - See real-time profit/loss on each position
    - Monitor portfolio allocation and risk exposure
    
    **2. Strategy Execution**
    - Import strategies from Strategy Builder
    - Set up automated trading rules
    - Manual override capabilities for learning
    - Real-time signal generation and execution
    
    **3. Risk Monitoring**
    - Live position sizing based on your rules
    - Automatic stop loss and take profit execution
    - Drawdown alerts and position limits
    - Performance tracking vs benchmark
    
    **🎯 Key Features:**
    
    **Real-Time Signals**
    - Your strategy generates live BUY/SELL/HOLD signals
    - Clear visual indicators on charts
    - Signal strength and confidence levels
    - Historical signal performance tracking
    
    **Order Management**
    - Market orders (immediate execution)
    - Limit orders (price-specific execution)
    - Stop orders (risk management)
    - Order history and fill tracking
    
    **Performance Analytics**
    - Live calculation of all metrics from Strategy Builder
    - Rolling performance windows (1D, 1W, 1M, 3M)
    - Comparison with market benchmarks
    - Trade attribution analysis
    
    **🎓 Learning Opportunities:**
    
    **1. Paper Trading Psychology**
    - Experience the emotions of trading without real money
    - Learn to follow your rules even when signals seem "wrong"
    - Practice position sizing and risk management
    - Develop discipline and consistency
    
    **2. Strategy Validation**
    - See how your optimized strategies perform in "live" conditions
    - Test strategy robustness across different market regimes
    - Identify when strategies start to degrade
    - Learn when to stop trading a strategy
    
    **3. Market Understanding**
    - Observe how real market microstructure affects execution
    - Learn about slippage, bid-ask spreads, and market impact
    - Understand the difference between backtesting and live trading
    - Experience the challenges of real-time decision making
    
    **💡 Live Trading Best Practices:**
    
    1. **Start Small**: Begin with small position sizes even with virtual money
    2. **Follow Your Rules**: Stick to your strategy parameters religiously
    3. **Track Everything**: Keep detailed logs of decisions and outcomes
    4. **Review Regularly**: Daily review of trades and performance
    5. **Stay Disciplined**: Don't override your system based on emotions
    6. **Learn from Mistakes**: Analyze losing trades for improvement opportunities
    """)

# News Analysis
st.markdown('<p class="medium-font" id="4-news-analysis-sentiment-integration">📰 4. News Analysis - Sentiment Integration</p>', unsafe_allow_html=True)

with st.expander("📰 News Analysis Complete Tutorial", expanded=False):
    st.markdown("""
    <div class="info-box">
    <h4>📈 Market Sentiment Intelligence</h4>
    News Analysis helps you understand market sentiment and incorporate qualitative factors into your trading decisions.
    </div>
    
    **🔍 What News Analysis Provides:**
    
    **1. Sentiment Scoring**
    - Real-time sentiment analysis of financial news
    - Positive/Negative/Neutral classification
    - Sentiment strength indicators (0-100 scale)
    - Historical sentiment trends and patterns
    
    **2. News Sources**
    - RSS feeds from major financial news outlets
    - Economic calendar events and announcements
    - Company-specific news and earnings reports
    - Market commentary and analyst opinions
    
    **3. AI-Powered Insights**
    - Automatic categorization of news by impact level
    - Key phrase extraction and trend identification
    - Correlation analysis with price movements
    - Sentiment momentum and reversal signals
    
    **📊 Integration with Trading:**
    
    **Sentiment Filters**
    - Enhance your strategies with sentiment confirmation
    - Avoid trading during high uncertainty periods
    - Identify sentiment-driven market moves
    - Use news as a risk management tool
    
    **Market Regime Detection**
    - Identify when news sentiment shifts market dynamics
    - Recognize risk-on vs risk-off environments
    - Understand sector rotation based on news themes
    - Adapt strategy parameters to sentiment regimes
    
    **Event-Driven Trading**
    - Pre-announcement positioning strategies
    - Post-news momentum or reversal trades
    - Earnings season and economic data strategies
    - Central bank communication analysis
    
    **🎯 How to Use News Analysis:**
    
    **1. Daily Market Context**
    - Check overall sentiment before trading
    - Identify major themes driving markets
    - Look for sentiment extremes (contrarian signals)
    - Monitor news flow intensity and quality
    
    **2. Strategy Enhancement**
    - Use positive sentiment to confirm momentum signals
    - Use negative sentiment to confirm mean reversion setups
    - Avoid trading during major news events (unless specifically trading news)
    - Adjust position sizes based on sentiment uncertainty
    
    **3. Risk Management**
    - Reduce exposure during high negative sentiment
    - Increase stop losses during volatile news periods
    - Monitor for "black swan" type news events
    - Use sentiment as an additional confirmation filter
    
    **💡 News Analysis Best Practices:**
    
    1. **Don't Trade on Headlines**: Use news for context, not knee-jerk reactions
    2. **Verify Sources**: Distinguish between rumors and confirmed news
    3. **Time Decay**: News impact diminishes quickly in modern markets
    4. **Correlation Not Causation**: Sentiment and prices can diverge
    5. **Multiple Sources**: Don't rely on single news sources or sentiment scores
    """)

# Backtesting
st.markdown('<p class="medium-font" id="5-backtesting-historical-validation">🔄 5. Backtesting - Historical Validation</p>', unsafe_allow_html=True)

with st.expander("🔄 Backtesting Complete Tutorial", expanded=False):
    st.markdown("""
    <div class="success-box">
    <h4>🔍 The Scientific Method for Trading</h4>
    Backtesting is how you validate that your strategy would have worked historically. It's essential for building confidence in your approach.
    </div>
    
    **🎯 Purpose of Backtesting:**
    
    **1. Strategy Validation**
    - Test if your strategy would have been profitable historically
    - Understand the strategy's behavior across different market conditions
    - Identify the best parameters for your approach
    - Measure risk-adjusted returns and drawdown periods
    
    **2. Risk Assessment**
    - Discover maximum drawdown periods and severity
    - Understand the volatility of returns
    - Identify losing streaks and their duration
    - Assess the robustness of your risk management rules
    
    **3. Parameter Optimization**
    - Test different combinations of strategy parameters
    - Find optimal lookback periods, thresholds, and filters
    - Balance between profitability and robustness
    - Avoid over-optimization (curve fitting)
    
    **📊 Backtesting Features:**
    
    **Historical Data**
    - Multiple years of price and volume data
    - Different market regimes (bull, bear, sideways)
    - Various time periods and market conditions
    - Clean, adjusted data for accurate testing
    
    **Realistic Simulation**
    - Transaction costs and slippage modeling
    - Proper order execution timing (no look-ahead bias)
    - Position sizing and capital allocation rules
    - Margin requirements and leverage constraints
    
    **Comprehensive Analysis**
    - Trade-by-trade results and attribution
    - Monthly and yearly performance breakdowns
    - Rolling performance windows and statistics
    - Benchmark comparison and relative performance
    
    **🔬 Advanced Backtesting Techniques:**
    
    **1. Out-of-Sample Testing**
    - Split your data into training and testing periods
    - Optimize on training data, validate on test data
    - Use walk-forward analysis for dynamic optimization
    - Avoid data snooping and overfitting
    
    **2. Monte Carlo Analysis**
    - Test strategy robustness with randomized data
    - Assess probability of future success
    - Understand confidence intervals for returns
    - Identify tail risks and extreme scenarios
    
    **3. Multi-Asset Testing**
    - Test strategy across different instruments
    - Assess strategy generalizability
    - Portfolio-level backtesting and correlation effects
    - Sector and style rotation strategies
    
    **⚠️ Backtesting Limitations:**
    
    **1. Historical Bias**
    - Past performance doesn't guarantee future results
    - Market regimes can change permanently
    - Survivorship bias in historical data
    - Economic conditions evolve over time
    
    **2. Execution Differences**
    - Real trading has slippage and market impact
    - Liquidity constraints not fully captured
    - Emotional factors absent in backtesting
    - Technology failures and operational risks
    
    **3. Data Quality Issues**
    - Corporate actions and dividend adjustments
    - Delisted stocks and bankruptcy events
    - Data errors and missing information
    - Changing market microstructure over time
    
    **💡 Backtesting Best Practices:**
    
    **1. Realistic Assumptions**
    - Include reasonable transaction costs (10-20bp)
    - Model realistic slippage (2-5bp for liquid stocks)
    - Use appropriate position sizing limits
    - Account for market impact on large trades
    
    **2. Robust Testing**
    - Test across multiple time periods (at least 5+ years)
    - Include different market regimes
    - Use out-of-sample validation
    - Test parameter sensitivity
    
    **3. Statistical Significance**
    - Ensure sufficient number of trades (100+ minimum)
    - Calculate confidence intervals for returns
    - Test for statistical significance of results
    - Avoid overfitting to specific time periods
    
    **4. Implementation Readiness**
    - Verify that strategy can be implemented in practice
    - Check data availability for live trading
    - Ensure computational efficiency for real-time execution
    - Test with realistic capital constraints
    """)

# AI Assistant
st.markdown('<p class="medium-font" id="6-ai-assistant-intelligent-guidance">🤖 6. AI Assistant - Intelligent Guidance</p>', unsafe_allow_html=True)

with st.expander("🤖 AI Assistant Complete Tutorial", expanded=False):
    st.markdown("""
    <div class="highlight">
    <h4>🧠 Your Personal Trading Mentor</h4>
    The AI Assistant is powered by advanced language models (Groq Llama 3.3 70B) and provides intelligent guidance for all aspects of trading.
    </div>
    
    **🎯 What the AI Assistant Can Help With:**
    
    **1. Strategy Development**
    - Brainstorm new trading ideas and approaches
    - Explain complex trading concepts in simple terms
    - Suggest parameter ranges for different market conditions
    - Help design custom strategies based on your ideas
    
    **2. Market Analysis**
    - Interpret current market conditions and trends
    - Explain the significance of economic events
    - Analyze technical indicators and their meanings
    - Provide context for unusual market behavior
    
    **3. Risk Management**
    - Calculate appropriate position sizes for your capital
    - Design stop loss and take profit strategies
    - Assess portfolio risk and correlation
    - Suggest risk management improvements
    
    **4. Performance Review**
    - Analyze your trading results and identify patterns
    - Suggest improvements to underperforming strategies
    - Help interpret performance metrics
    - Identify when to stop using a strategy
    
    **🔄 How to Interact with the AI:**
    
    **Ask Specific Questions**
    - "How should I set stop losses for a momentum strategy?"
    - "What's the difference between Sharpe and Sortino ratios?"
    - "Why is my mean reversion strategy losing money?"
    - "How do I know if I'm overfitting my backtest?"
    
    **Share Your Data**
    - Upload your trading results for analysis
    - Describe your current market observations
    - Share specific performance metrics for review
    - Discuss your trading goals and constraints
    
    **Get Explanations**
    - "Explain why this trade setup looks good/bad"
    - "What does a Sortino ratio of 1.5 mean?"
    - "How do economic indicators affect my strategy?"
    - "When should I increase my position size?"
    
    **🎓 Educational Features:**
    
    **Concept Explanations**
    - Break down complex financial concepts
    - Provide examples and analogies
    - Suggest further reading and resources
    - Connect theory to practical application
    
    **Strategy Walkthroughs**
    - Step-by-step strategy development
    - Parameter selection guidance
    - Implementation best practices
    - Common mistakes and how to avoid them
    
    **Market Commentary**
    - Daily market insights and analysis
    - Economic calendar interpretation
    - Sector and style rotation guidance
    - Risk-on/risk-off regime identification
    
    **💡 AI Assistant Best Practices:**
    
    **1. Be Specific**
    - Provide context and specific details
    - Share relevant data and metrics
    - Ask focused questions rather than general ones
    - Follow up with clarifying questions
    
    **2. Verify Information**
    - Double-check AI suggestions with other sources
    - Test recommendations in backtesting before live implementation
    - Understand the reasoning behind suggestions
    - Don't blindly follow AI advice
    
    **3. Learn Continuously**
    - Ask "why" questions to understand concepts
    - Request explanations of technical terms
    - Connect new learning to your existing knowledge
    - Keep notes of important insights
    
    **4. Use as a Guide, Not Gospel**
    - AI provides suggestions, not investment advice
    - Always do your own analysis and validation
    - Consider multiple perspectives and approaches
    - Make final decisions based on your own judgment
    """)

# Best Practices Section
st.markdown("---")
st.markdown('<p class="big-font" id="optimization-best-practices">🎯 Best Practices & Advanced Tips</p>', unsafe_allow_html=True)

# Optimization Best Practices
st.markdown('<p class="medium-font">🚀 Optimization Best Practices</p>', unsafe_allow_html=True)

with st.expander("🚀 Master the Art of Strategy Optimization", expanded=False):
    st.markdown("""
    <div class="success-box">
    <h4>🎯 The Science of Strategy Optimization</h4>
    Optimization is both an art and a science. Done right, it can significantly improve your trading results. Done wrong, it can lead to overfit strategies that fail in live trading.
    </div>
    
    **🔬 Scientific Approach to Optimization:**
    
    **1. Hypothesis-Driven Testing**
    - Start with a clear hypothesis about what you want to improve
    - Define success metrics before you begin optimization
    - Test one variable at a time when possible
    - Document your reasoning for each change
    
    **2. Out-of-Sample Validation**
    - Always reserve 20-30% of your data for final validation
    - Never optimize on your entire dataset
    - Use walk-forward analysis for dynamic strategies
    - Test on different time periods and market regimes
    
    **3. Statistical Significance**
    - Ensure your results are statistically meaningful
    - Look for consistent improvement across multiple metrics
    - Require minimum number of trades (100+) for validity
    - Calculate confidence intervals for your returns
    
    **🎯 AI Optimization Workflow:**
    
    **Phase 1: Baseline Establishment**
    1. Start with strategy defaults and understand baseline performance
    2. Identify the primary weakness (low returns, high drawdown, etc.)
    3. Set realistic improvement targets (5-15% improvement per iteration)
    4. Choose appropriate optimization objective (Sortino for most cases)
    
    **Phase 2: AI-Guided Exploration**
    1. Use AI optimization with conservative improvement thresholds
    2. Review each AI suggestion and understand the reasoning
    3. Validate improvements make intuitive sense
    4. Test suggested parameters in different market conditions
    
    **Phase 3: Manual Fine-Tuning**
    1. Take AI suggestions as starting points for manual exploration
    2. Test parameter sensitivity around AI-suggested values
    3. Look for robust parameter ranges, not single optimal points
    4. Consider transaction costs and realistic implementation constraints
    
    **Phase 4: Validation and Implementation**
    1. Test final parameters on out-of-sample data
    2. Compare results to simple benchmark strategies
    3. Assess robustness across different market regimes
    4. Document your optimization process and rationale
    
    **⚠️ Common Optimization Pitfalls:**
    
    **1. Overfitting (Curve Fitting)**
    - Using too many parameters relative to data
    - Optimizing on the same data you test on
    - Achieving unrealistically good backtest results
    - Parameters that are too specific (e.g., 23.7 days instead of 24)
    
    **2. Data Snooping**
    - Testing hundreds of parameter combinations without adjusting for multiple testing
    - Using future information in historical tests
    - Selection bias in choosing optimization periods
    - Ignoring survivorship bias in stock selection
    
    **3. Unrealistic Assumptions**
    - Ignoring transaction costs and slippage
    - Assuming perfect execution timing
    - Using bid-ask midpoint prices instead of realistic execution prices
    - Not accounting for market impact of your trades
    
    **💡 Professional Optimization Techniques:**
    
    **1. Robust Parameter Selection**
    - Choose parameter ranges that work well, not just optimal points
    - Prefer parameters that are stable across different time periods
    - Use parameter heat maps to visualize robustness
    - Test parameter stability with bootstrap sampling
    
    **2. Multi-Objective Optimization**
    - Balance return, risk, and drawdown simultaneously
    - Use Pareto optimization for multiple competing objectives
    - Consider implementation constraints (turnover, capacity)
    - Optimize for risk-adjusted metrics, not just returns
    
    **3. Dynamic Parameter Adjustment**
    - Use market regime detection to adjust parameters
    - Implement parameter decay to prevent overfitting
    - Use rolling optimization windows for adaptation
    - Monitor parameter stability over time
    """)

# Risk Management
st.markdown('<p class="medium-font" id="risk-management-essentials">⚠️ Risk Management Essentials</p>', unsafe_allow_html=True)

with st.expander("⚠️ Protect Your Capital - Risk Management Guide", expanded=False):
    st.markdown("""
    <div class="warning-box">
    <h4>🛡️ Risk Management is Everything</h4>
    Great traders are not those who are right most of the time, but those who manage risk effectively. Your first job is to survive; profits come second.
    </div>
    
    **🎯 The Risk Management Hierarchy:**
    
    **Level 1: Position Sizing**
    - Never risk more than 1-2% of your capital on any single trade
    - Use position sizing formulas (Kelly Criterion, Fixed Fractional)
    - Account for correlation between positions
    - Reduce position sizes during losing streaks
    
    **Level 2: Stop Losses**
    - Always use stop losses - no exceptions
    - Set stops based on volatility, not arbitrary percentages
    - Use technical levels (support/resistance) when appropriate
    - Trail stops to lock in profits on winning trades
    
    **Level 3: Portfolio Risk**
    - Limit total portfolio exposure (maximum 50-70% invested)
    - Diversify across strategies, timeframes, and assets
    - Monitor portfolio correlation and concentration
    - Set maximum portfolio drawdown limits
    
    **Level 4: Strategy Risk**
    - Stop trading strategies that exceed drawdown limits
    - Monitor strategy performance degradation
    - Use multiple strategies to reduce single-strategy risk
    - Regularly review and update strategy parameters
    
    **📊 Risk Metrics to Monitor:**
    
    **Drawdown Metrics**
    - **Maximum Drawdown**: Worst peak-to-valley loss
    - **Current Drawdown**: How far you are from peak equity
    - **Drawdown Duration**: How long you've been underwater
    - **Recovery Factor**: Total return ÷ Maximum drawdown
    
    **Volatility Metrics**
    - **Standard Deviation**: Measure of return variability
    - **Value at Risk (VaR)**: Potential loss over specific timeframe
    - **Expected Shortfall**: Average loss beyond VaR threshold
    - **Calmar Ratio**: Annual return ÷ Maximum drawdown
    
    **Risk-Adjusted Returns**
    - **Sharpe Ratio**: (Return - Risk-free rate) ÷ Standard deviation
    - **Sortino Ratio**: Return ÷ Downside deviation (better than Sharpe)
    - **Information Ratio**: Active return ÷ Tracking error
    - **Treynor Ratio**: Return ÷ Beta (systematic risk)
    
    **🚨 Risk Management Rules:**
    
    **Daily Rules**
    - Check your current portfolio risk exposure every day
    - Never add to losing positions without clear rationale
    - Close positions that hit your predetermined stop levels
    - Don't trade when you're emotional or distracted
    
    **Weekly Rules**
    - Review your worst-performing positions and strategies
    - Assess whether your risk levels are appropriate for current market conditions
    - Update your risk parameters based on changing volatility
    - Calculate your rolling Sharpe and Sortino ratios
    
    **Monthly Rules**
    - Conduct comprehensive portfolio performance review
    - Adjust position sizing based on recent performance
    - Review and update your risk management procedures
    - Stress test your portfolio against historical scenarios
    
    **💡 Advanced Risk Techniques:**
    
    **1. Dynamic Position Sizing**
    ```
    Position Size = (Portfolio Value × Risk per Trade) ÷ (Entry Price × Stop Loss %)
    
    Example:
    - Portfolio: $100,000
    - Risk per trade: 1%
    - Entry price: $50
    - Stop loss: 5%
    
    Position Size = ($100,000 × 0.01) ÷ ($50 × 0.05) = $1,000 ÷ $2.50 = 400 shares
    ```
    
    **2. Correlation-Adjusted Sizing**
    - Reduce position sizes when strategies are highly correlated
    - Monitor rolling correlation between your positions
    - Use correlation matrices to identify hidden risks
    - Rebalance when correlations spike during market stress
    
    **3. Volatility Targeting**
    - Adjust position sizes based on current market volatility
    - Use VIX or realized volatility to scale exposure
    - Increase positions when volatility is low
    - Reduce positions when volatility is high
    
    **4. Regime-Based Risk Management**
    - Identify market regimes (trending vs. mean-reverting)
    - Adjust risk parameters based on current regime
    - Use different strategies for different market conditions
    - Monitor regime changes and adapt quickly
    """)

# Common Pitfalls
st.markdown('<p class="medium-font" id="common-pitfalls-to-avoid">🚫 Common Pitfalls to Avoid</p>', unsafe_allow_html=True)

with st.expander("🚫 Learn from Others' Mistakes", expanded=False):
    st.markdown("""
    <div class="warning-box">
    <h4>💸 Expensive Lessons Others Have Learned</h4>
    Learning from others' mistakes is much cheaper than making them yourself. Here are the most common pitfalls that destroy trading accounts.
    </div>
    
    **🎯 Strategy Development Pitfalls:**
    
    **1. Overfitting (The #1 Killer)**
    - **Problem**: Creating strategies that work perfectly on historical data but fail in live trading
    - **Symptoms**: Unrealistically high Sharpe ratios (>3.0), perfect equity curves, parameters that are too specific
    - **Solution**: Use out-of-sample testing, prefer simple strategies, focus on robustness over perfection
    
    **2. Look-Ahead Bias**
    - **Problem**: Using future information to make past decisions in backtests
    - **Symptoms**: Signals that appear exactly at perfect entry/exit points, unrealistic timing
    - **Solution**: Ensure all indicators use only past data, simulate realistic execution delays
    
    **3. Survivorship Bias**
    - **Problem**: Testing only on stocks that survived the entire period
    - **Symptoms**: Better-than-expected results, missing the impact of bankruptcies and delistings
    - **Solution**: Include delisted stocks in backtests, test on broad market indices
    
    **📊 Risk Management Pitfalls:**
    
    **1. No Stop Losses**
    - **Problem**: Letting losers run while cutting winners short
    - **Symptoms**: Large drawdowns, emotional decision making, "hope" trades
    - **Solution**: Always use stops, stick to your rules, cut losses quickly
    
    **2. Position Sizing Errors**
    - **Problem**: Risking too much per trade or having positions that are too large
    - **Symptoms**: Large swings in account value, inability to sleep at night
    - **Solution**: Never risk more than 1-2% per trade, use proper position sizing formulas
    
    **3. Correlation Neglect**
    - **Problem**: Having multiple positions that all move together
    - **Symptoms**: Large losses during market stress, all positions going wrong at once
    - **Solution**: Monitor position correlation, diversify across uncorrelated strategies
    
    **🧠 Psychological Pitfalls:**
    
    **1. Revenge Trading**
    - **Problem**: Trying to make back losses with bigger, riskier trades
    - **Symptoms**: Increasing position sizes after losses, abandoning strategy rules
    - **Solution**: Take breaks after large losses, stick to predetermined position sizes
    
    **2. Overconfidence After Wins**
    - **Problem**: Increasing risk after a string of successful trades
    - **Symptoms**: Taking larger positions, ignoring risk management rules
    - **Solution**: Treat each trade independently, maintain consistent risk management
    
    **3. Analysis Paralysis**
    - **Problem**: Over-analyzing and never actually implementing strategies
    - **Symptoms**: Endless backtesting, never starting live trading
    - **Solution**: Set deadlines for analysis, start with small positions
    
    **💻 Technical Pitfalls:**
    
    **1. Ignoring Transaction Costs**
    - **Problem**: Strategies that are profitable in theory but lose money due to costs
    - **Symptoms**: High-frequency strategies with small profit margins
    - **Solution**: Include realistic transaction costs (10-20bp) in all backtests
    
    **2. Data Quality Issues**
    - **Problem**: Using bad data that leads to incorrect conclusions
    - **Symptoms**: Unrealistic price movements, missing data points
    - **Solution**: Verify data quality, use multiple data sources, clean data properly
    
    **3. Technology Failures**
    - **Problem**: System failures during critical trading moments
    - **Symptoms**: Missed trades, incorrect executions, data feed issues
    - **Solution**: Have backup systems, test thoroughly, monitor continuously
    
    **📈 Market Understanding Pitfalls:**
    
    **1. Fighting the Fed**
    - **Problem**: Trading against major central bank policy
    - **Symptoms**: Consistent losses during policy shifts
    - **Solution**: Understand monetary policy cycles, adapt strategies to policy regime
    
    **2. Ignoring Market Regimes**
    - **Problem**: Using strategies that work in some conditions but not others
    - **Symptoms**: Great performance in trending markets, terrible in choppy markets
    - **Solution**: Identify current market regime, use appropriate strategies
    
    **3. News Trading Without Edge**
    - **Problem**: Trying to trade news without proper infrastructure or edge
    - **Symptoms**: Buying high and selling low on news events
    - **Solution**: Avoid trading immediately around major news, focus on longer-term responses
    
    **🛡️ How to Avoid These Pitfalls:**
    
    **1. Education First**
    - Read extensively about trading and market history
    - Understand the mathematics behind your strategies
    - Learn from successful traders and their approaches
    - Stay updated on market developments and research
    
    **2. Start Small**
    - Begin with small amounts of capital
    - Test strategies thoroughly before scaling up
    - Gradually increase exposure as you gain confidence
    - Keep detailed records of all trades and decisions
    
    **3. Systematic Approach**
    - Develop written trading rules and stick to them
    - Create checklists for strategy development and implementation
    - Regular review and update procedures
    - Maintain discipline even when strategies underperform
    
    **4. Continuous Improvement**
    - Regularly review your trading performance
    - Identify patterns in your mistakes
    - Update your processes based on lessons learned
    - Stay humble and always keep learning
    """)

# Conclusion and Next Steps
st.markdown("---")
st.markdown('<p class="big-font">🎯 Your Trading Journey Starts Here</p>', unsafe_allow_html=True)

st.markdown("""
<div class="success-box">
<h3>🚀 Ready to Begin?</h3>

<strong>Recommended Learning Path:</strong>

<ol>
<li><strong>📚 Start with Theory</strong> - Read through this entire tutorial and understand the key concepts</li>
<li><strong>📊 Explore the Dashboard</strong> - Get familiar with market data and analysis tools</li>
<li><strong>🔧 Build Your First Strategy</strong> - Start with a simple Momentum strategy using default parameters</li>
<li><strong>🤖 Try AI Optimization</strong> - Let the AI suggest improvements and understand its reasoning</li>
<li><strong>📈 Practice Virtual Trading</strong> - Test your strategy with virtual money</li>
<li><strong>🔄 Validate with Backtesting</strong> - Test on different time periods and market conditions</li>
<li><strong>📰 Add News Analysis</strong> - Incorporate sentiment analysis into your decision making</li>
<li><strong>🎯 Refine and Iterate</strong> - Continuously improve your approach based on results</li>
</ol>

<strong>💡 Remember:</strong>
<ul>
<li>This is an educational platform - always practice with virtual money first</li>
<li>Past performance does not guarantee future results</li>
<li>Risk management is more important than profit maximization</li>
<li>Consistency and discipline beat sporadic brilliance</li>
</ul>
</div>
""", unsafe_allow_html=True)

# Resources and Links
st.markdown("---")
st.markdown('<p class="big-font">📖 Additional Resources</p>', unsafe_allow_html=True)

resources_col1, resources_col2 = st.columns(2)

with resources_col1:
    st.markdown("""
    **📚 Recommended Reading:**
    - **"A Random Walk Down Wall Street"** by Burton Malkiel
    - **"Quantitative Trading"** by Ernest Chan
    - **"Algorithmic Trading"** by Jeffrey Bacidore
    - **"Trading and Exchanges"** by Larry Harris
    - **"Market Microstructure Theory"** by Maureen O'Hara
    
    **🎓 Online Courses:**
    - **Coursera**: Financial Markets (Yale University)
    - **edX**: Introduction to Trading, Machine Learning and GCP
    - **Khan Academy**: Finance and Capital Markets
    - **Udacity**: AI for Trading Nanodegree
    """)

with resources_col2:
    st.markdown("""
    **🌐 Useful Websites:**
    - **Investopedia**: Financial education and terminology
    - **Yahoo Finance**: Market data and news
    - **TradingView**: Charting and technical analysis
    - **QuantLib**: Quantitative finance library
    - **Zipline**: Algorithmic trading library
    
    **📊 Data Sources:**
    - **jugaad-data**: Indian market data (used in this platform)
    - **Alpha Vantage**: Free API for stock data
    - **Quandl**: Financial and economic data
    - **IEX Cloud**: Real-time and historical market data
    """)

# Contact and Support
st.markdown("---")
st.markdown('<p class="big-font">💬 Getting Help</p>', unsafe_allow_html=True)

st.markdown("""
<div class="info-box">
<h4>🤖 AI Assistant is Your First Stop</h4>
For most questions about trading concepts, strategy development, or platform usage, start with the AI Assistant. 
It's available 24/7 and can provide detailed explanations and guidance.

<strong>Common Questions to Ask the AI:</strong>
<ul>
<li>"How do I interpret my strategy's Sortino ratio?"</li>
<li>"Why is my momentum strategy underperforming?"</li>
<li>"What position size should I use for a $10,000 account?"</li>
<li>"How do I know if my backtest is overfitted?"</li>
<li>"What's the difference between Sharpe and Sortino ratios?"</li>
</ul>
</div>
""", unsafe_allow_html=True)

# Footer
st.markdown("---")
st.markdown("""
<div style="text-align: center; color: #666; font-size: 14px;">
<p>📚 <strong>Complete Trading Platform Tutorial</strong> - Your comprehensive guide to algorithmic trading</p>
<p>🎯 Remember: This platform is for educational purposes only. Always do your own research and never invest more than you can afford to lose.</p>
<p>🚀 Happy Trading and Continuous Learning!</p>
</div>
""", unsafe_allow_html=True)
